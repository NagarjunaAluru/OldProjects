//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.5-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.09.05 at 02:48:49 AM IST 
//


package com.ge.icfp.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.hydus.wff.core.security.JAXBObjectSecureSerializer;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://treasury.ge.com/schemas/ICFP/UserMgmt.xsd}Role_Info" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://treasury.ge.com/schemas/ICFP/MsgHeader.xsd}Msg_Header" minOccurs="0"/>
 *         &lt;element ref="{http://treasury.ge.com/schemas/ICFP/ReAffirmApprovers.xsd}ReAffirmApprovers" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://treasury.ge.com/schemas/UserDataRequest.xsd}UserInformationRequest" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://treasury.ge.com/schemas/UserData.xsd}UserDataResponse" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://treasury.ge.com/schemas/ICFP/UserMgmt.xsd}User_Action_Data" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "roleInfos",
    "msgHeader",
    "reAffirmApprovers",
    "userInformationRequests",
    "userDataResponses",
    "userActionDatas"
})
@XmlRootElement(name = "User_Information", namespace = "http://treasury.ge.com/schemas/ICFP/UserMgmt.xsd")
public class UserInformation
    extends JAXBObjectSecureSerializer
    implements Serializable
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "Role_Info", namespace = "http://treasury.ge.com/schemas/ICFP/UserMgmt.xsd")
    protected List<RoleInfo> roleInfos;
    @XmlElement(name = "Msg_Header", namespace = "http://treasury.ge.com/schemas/ICFP/MsgHeader.xsd")
    protected MsgHeader msgHeader;
    @XmlElement(name = "ReAffirmApprovers", namespace = "http://treasury.ge.com/schemas/ICFP/ReAffirmApprovers.xsd")
    protected List<ReAffirmApprovers> reAffirmApprovers;
    @XmlElement(name = "UserInformationRequest", namespace = "http://treasury.ge.com/schemas/UserDataRequest.xsd")
    protected List<UserInformationRequest> userInformationRequests;
    @XmlElement(name = "UserDataResponse", namespace = "http://treasury.ge.com/schemas/UserData.xsd")
    protected List<UserDataResponse> userDataResponses;
    @XmlElement(name = "User_Action_Data", namespace = "http://treasury.ge.com/schemas/ICFP/UserMgmt.xsd")
    protected List<UserActionData> userActionDatas;

    /**
     * Gets the value of the roleInfos property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the roleInfos property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRoleInfos().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RoleInfo }
     * 
     * 
     */
    public List<RoleInfo> getRoleInfos() {
        if (roleInfos == null) {
            roleInfos = new ArrayList<RoleInfo>();
        }
        return this.roleInfos;
    }

    /**
     * Gets the value of the msgHeader property.
     * 
     * @return
     *     possible object is
     *     {@link MsgHeader }
     *     
     */
    public MsgHeader getMsgHeader() {
        return msgHeader;
    }

    /**
     * Sets the value of the msgHeader property.
     * 
     * @param value
     *     allowed object is
     *     {@link MsgHeader }
     *     
     */
    public void setMsgHeader(MsgHeader value) {
        this.msgHeader = value;
    }

    /**
     * Gets the value of the reAffirmApprovers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reAffirmApprovers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReAffirmApprovers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReAffirmApprovers }
     * 
     * 
     */
    public List<ReAffirmApprovers> getReAffirmApprovers() {
        if (reAffirmApprovers == null) {
            reAffirmApprovers = new ArrayList<ReAffirmApprovers>();
        }
        return this.reAffirmApprovers;
    }

    /**
     * Gets the value of the userInformationRequests property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userInformationRequests property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserInformationRequests().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UserInformationRequest }
     * 
     * 
     */
    public List<UserInformationRequest> getUserInformationRequests() {
        if (userInformationRequests == null) {
            userInformationRequests = new ArrayList<UserInformationRequest>();
        }
        return this.userInformationRequests;
    }

    /**
     * Gets the value of the userDataResponses property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userDataResponses property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserDataResponses().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UserDataResponse }
     * 
     * 
     */
    public List<UserDataResponse> getUserDataResponses() {
        if (userDataResponses == null) {
            userDataResponses = new ArrayList<UserDataResponse>();
        }
        return this.userDataResponses;
    }

    /**
     * Gets the value of the userActionDatas property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the userActionDatas property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUserActionDatas().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UserActionData }
     * 
     * 
     */
    public List<UserActionData> getUserActionDatas() {
        if (userActionDatas == null) {
            userActionDatas = new ArrayList<UserActionData>();
        }
        return this.userActionDatas;
    }

    public UserInformation withRoleInfos(RoleInfo... values) {
        if (values!= null) {
            for (RoleInfo value: values) {
                getRoleInfos().add(value);
            }
        }
        return this;
    }

    public UserInformation withRoleInfos(Collection<RoleInfo> values) {
        if (values!= null) {
            getRoleInfos().addAll(values);
        }
        return this;
    }

    public UserInformation withMsgHeader(MsgHeader value) {
        setMsgHeader(value);
        return this;
    }

    public UserInformation withReAffirmApprovers(ReAffirmApprovers... values) {
        if (values!= null) {
            for (ReAffirmApprovers value: values) {
                getReAffirmApprovers().add(value);
            }
        }
        return this;
    }

    public UserInformation withReAffirmApprovers(Collection<ReAffirmApprovers> values) {
        if (values!= null) {
            getReAffirmApprovers().addAll(values);
        }
        return this;
    }

    public UserInformation withUserInformationRequests(UserInformationRequest... values) {
        if (values!= null) {
            for (UserInformationRequest value: values) {
                getUserInformationRequests().add(value);
            }
        }
        return this;
    }

    public UserInformation withUserInformationRequests(Collection<UserInformationRequest> values) {
        if (values!= null) {
            getUserInformationRequests().addAll(values);
        }
        return this;
    }

    public UserInformation withUserDataResponses(UserDataResponse... values) {
        if (values!= null) {
            for (UserDataResponse value: values) {
                getUserDataResponses().add(value);
            }
        }
        return this;
    }

    public UserInformation withUserDataResponses(Collection<UserDataResponse> values) {
        if (values!= null) {
            getUserDataResponses().addAll(values);
        }
        return this;
    }

    public UserInformation withUserActionDatas(UserActionData... values) {
        if (values!= null) {
            for (UserActionData value: values) {
                getUserActionDatas().add(value);
            }
        }
        return this;
    }

    public UserInformation withUserActionDatas(Collection<UserActionData> values) {
        if (values!= null) {
            getUserActionDatas().addAll(values);
        }
        return this;
    }

    /**
     * Sets the value of the roleInfos property.
     * 
     * @param roleInfos
     *     allowed object is
     *     {@link RoleInfo }
     *     
     */
    public void setRoleInfos(List<RoleInfo> roleInfos) {
        this.roleInfos = roleInfos;
    }

    /**
     * Sets the value of the reAffirmApprovers property.
     * 
     * @param reAffirmApprovers
     *     allowed object is
     *     {@link ReAffirmApprovers }
     *     
     */
    public void setReAffirmApprovers(List<ReAffirmApprovers> reAffirmApprovers) {
        this.reAffirmApprovers = reAffirmApprovers;
    }

    /**
     * Sets the value of the userInformationRequests property.
     * 
     * @param userInformationRequests
     *     allowed object is
     *     {@link UserInformationRequest }
     *     
     */
    public void setUserInformationRequests(List<UserInformationRequest> userInformationRequests) {
        this.userInformationRequests = userInformationRequests;
    }

    /**
     * Sets the value of the userDataResponses property.
     * 
     * @param userDataResponses
     *     allowed object is
     *     {@link UserDataResponse }
     *     
     */
    public void setUserDataResponses(List<UserDataResponse> userDataResponses) {
        this.userDataResponses = userDataResponses;
    }

    /**
     * Sets the value of the userActionDatas property.
     * 
     * @param userActionDatas
     *     allowed object is
     *     {@link UserActionData }
     *     
     */
    public void setUserActionDatas(List<UserActionData> userActionDatas) {
        this.userActionDatas = userActionDatas;
    }

}
