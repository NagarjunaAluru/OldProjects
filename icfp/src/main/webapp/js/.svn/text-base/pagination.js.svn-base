// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var buildNavigation, gotoPage, showPerPage,_this = this;
    var showPerPage = 50 ;  
    var totalRows = gettableRow().length;
    var numberOfPages = Math.ceil(totalRows / showPerPage);
   
    $("#current_page").val(1);

    function paginationSize(){
      return parseInt($("select.pagination-rows").val());
    }

    $("select.pagination-rows").change(function(){
      var v = parseInt($("#current_page").val()); 
      showPerPage=paginationSize();
      if(totalRows <= showPerPage){
    	  gotoPage(1);
      }else{
    	  gotoPage(v);
      }
      
    })
   /*
    *	Build pagination links
    */

    function gettableRow(){
      var isDiv = $("div.tab-content");
      var table;
      if($(isDiv).length > 0){
        table = $(isDiv).find("div.active table.paginate");
      }else{
        table = $("table.paginate");
      }
      if($(table).length > 1)
          table = $(table).filter(".active");  
      return $(table).find("tbody tr");

    }

    buildNavigation = function(currentPage) {
      var dummy, item, middle, next, pageNo, previous;     
      pageNo = 1;
      totalRows = gettableRow().length;
      numberOfPages = Math.ceil(totalRows / showPerPage);
      middle = Math.ceil(numberOfPages / 2);
      previous = $('<li class="disabled"><a href="#">&laquo;</a></li>');
      next = $('<li><a href="#">&raquo;</a></li>');
      $('.pagination-right ul').empty();
      $('.pagination-right ul').append(previous);
      while (numberOfPages >= pageNo) {
        item = $('<li><a href="#">' + pageNo + '</a></li>');
        if (numberOfPages <= 9 || (pageNo === 1 || pageNo === 2 || pageNo === (numberOfPages - 1) || pageNo === numberOfPages)) {
          $('.pagination-right ul').append(item);
        } else if (currentPage === 2 && (pageNo === 3 || pageNo === 4 || pageNo === 5)) {
          $('.pagination-right ul').append(item);
        } else if (currentPage === numberOfPages - 1 && (pageNo === (numberOfPages - 4) || pageNo === (numberOfPages - 3) || pageNo === (numberOfPages - 2))) {
          $('.pagination-right ul').append(item);
        } else if ((pageNo === (middle - 1) || pageNo === middle || pageNo === (middle + 1)) && (currentPage === 1 || currentPage === numberOfPages)) {
          $('.pagination-right ul').append(item);
        } else if (currentPage === (pageNo - 1) || currentPage === pageNo || currentPage === (pageNo + 1)) {
          $('.pagination-right ul').append(item);
        } else {
          if ($('.pagination-right ul li:last a').html() !== '...') {
            dummy = $('<li class="disabled"><a href="#">...</a></li>');
            $('.pagination-right ul').append(dummy);
          }
        }
        $(item).find('a').click(function() {
          return gotoPage(parseInt($(this).html()));
        });
        pageNo++;
      }
      $('.pagination-right ul').append(next);
      if (numberOfPages < 2) {
        $(next).addClass('disabled');
      }
    };
    /*
    	Navigates to given page number
    */
    

    gotoPage = function(page) {
      var el, end, start;
      el = gettableRow();     
      start = (page - 1) * showPerPage;
      end = start + showPerPage;      
      $(el).hide();
      $(el).slice(start, end).show();
      buildNavigation(page);
      $('.pagination-right ul li').removeClass('active');
      $('.pagination-right ul li a').each(function() {
        if ($(this).html() === page.toString()) {
          return $(this).parent().addClass('active');
        }
      });
      $("#current_page").val(page);
      switch (page) {
        case 1:
          $(".pagination li:first").addClass('disabled');
          $(".pagination li:last").removeClass('disabled');
          break;
        case numberOfPages:
          $(".pagination li:last").addClass('disabled');
          $(".pagination li:first").removeClass('disabled');
          break;
        default:
          $(".pagination li:first").removeClass('disabled');
          $(".pagination li:last").removeClass('disabled');
      }
      //if(typeof activateFixHeader != 'undefined')
        //activateFixHeader();
    };

    window.gotoPage = gotoPage;

    $(".pagination li:first a").live('click', function() {
      var i;
      i = parseInt($("#current_page").val());
      if (i !== 1) {
        return gotoPage(i - 1);
      }
    });
    $(".pagination li:last a").live('click', function() {
      var i;
      i = parseInt($("#current_page").val());
      if (i !== numberOfPages) {
        return gotoPage(i + 1);
      }
    });
    buildNavigation(1);
    $('.pagination-right ul li:nth-child(2)').addClass('active');
    $(".table.active tbody tr").hide();
    $(".table.active tbody tr").slice(0, showPerPage).show();
    $(".pagination").next().find('.jumpto').click(function() {
      var val;
      if ($(this).prev().val()) {
        val = parseInt($(this).prev().val());
      }
      if (val >= 1 && val <= numberOfPages) {
        return gotoPage(val);
      }
    });
    $(".pagination").next().find('.manual').keyup(function(e) {
      if (e.which === 13) {
        return $(".pagination").next().find('.jumpto').click();
      }
    });
    $('a[data-toggle="tab"]').on('shown', function (e) {
        gotoPage(1);
    });
    if( $('#pipelineMgmtScreen').length > 0 ){
      gotoPage(1);
    }

    //initialize fixed header
    //if(typeof init != 'undefined')init()
  });

  
}).call(this);
